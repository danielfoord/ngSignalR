/*ng-signalR-0.0.1 | 28-01-2015 | Copyright (C) danielfoord MIT License*/
angular.module("ngSignalR",[]).constant("$",window.$).provider("signalr",["$",function(){this.transports=["webSockets","serverSentEvents","foreverFrame","longPolling"];var a={callback:"Callback function is not a function",errCallback:"errorCallback function is not a function"};this.setTransports=function(a){if(!angular.isArray(a))throw new Error("setTransports expects an 'Array'");this.transports=a},this.getTransports=function(){return this.transports},this.$get=function(b,c,d){var e=this.transports,f=[];return{createHubConnection:function(a){if(angular.isDefined(a)){var b=d.hubConnection(),c=f;c.push(b);var e=b.createHubProxy(a);return{connection:b,proxy:e}}throw new Error("channel is undefined")},createConnection:function(a){if(angular.isDefined(a)){var b=d.connection[a],c=f;return c.push(b),b}throw new Error("channel is undefined")},stopConnection:function(a){var b=c.defer(),d=f;try{d.splice(d.indexOf(a),1),a.stop(),b.resolve()}catch(e){b.reject(e)}return b.promise},stopAllConnections:function(){var a=c.defer(),b=f;try{for(var d in b)b[d].stop();f=[],a.resolve()}catch(e){a.reject(e)}return a.promise},startHubConnection:function(a){if(angular.isDefined(a)){var b=c.defer();return a.start({transport:e}).done(function(){b.resolve()}),b.promise}throw new Error("connection is undefined")},startConnection:function(){var a=c.defer();return d.connection.hub.start({transport:e}).done(function(){a.resolve()}),a.promise},receiveProxy:function(b,c,d){if(d&&!angular.isFunction(d))throw TypeError(a.callback);b.on(c,d)},receive:function(b,c,d){if(d&&angular.isFunction(d))b.client[c]=d;else if(d&&!angular.isFunction(d))throw new TypeError(a.callback)},sendProxy:function(b,c,d,e){if(e&&!angular.isFunction(e))throw new TypeError(a.errCallback);e?b.invoke(c,d).fail(e):b.invoke(c,d)},send:function(b,c,d,e){if(e&&!angular.isFunction(e))throw new TypeError(a.errCallback);e?b.server[c](d).fail(e):b.server[c](d)},logging:function(a,b){angular.isUndefined(b)?d.connection.hub.logging=a:b.logging=a},starting:function(b,c){if(angular.isFunction(b)&&angular.isDefined(c))c.starting(b);else if(angular.isFunction(b)&&angular.isUndefined(c))d.connection.hub.starting(b);else if(!angular.isFunction(b))throw new TypeError(a.callback)},received:function(b,c){if(angular.isFunction(b)&&angular.isDefined(c))c.received(b);else if(angular.isFunction(b)&&angular.isUndefined(c))d.connection.hub.received(b);else if(!angular.isFunction(b))throw new TypeError(a.callback)},connectionSlow:function(b,c){if(angular.isFunction(b)&&angular.isDefined(c))c.connectionSlow(b);else if(angular.isFunction(b)&&angular.isUndefined(c))d.connection.hub.connectionSlow(b);else if(!angular.isFunction(b))throw new TypeError(a.callback)},reconnecting:function(b,c){if(angular.isFunction(b)&&angular.isDefined(c))c.reconnecting(b);else if(angular.isFunction(b)&&angular.isUndefined(c))d.connection.hub.reconnecting(b);else if(!angular.isFunction(b))throw new TypeError(a.callback)},reconnected:function(b,c){if(angular.isFunction(b)&&angular.isDefined(c))c.reconnected(b);else if(angular.isFunction(b)&&angular.isUndefined(c))d.connection.hub.reconnected(b);else if(!angular.isFunction(b))throw new TypeError(a.callback)},stateChanged:function(b,c){if(angular.isFunction(b)&&angular.isDefined(c))c.stateChanged(b);else if(angular.isFunction(b)&&angular.isUndefined(c))d.connection.hub.stateChanged(b);else if(!angular.isFunction(b))throw new TypeError(a.callback)},disconnected:function(b,c){if(angular.isFunction(b)&&angular.isDefined(c))c.disconnected(b);else if(angular.isFunction(b)&&angular.isUndefined(c))d.connection.hub.disconnected(b);else if(!angular.isFunction(b))throw new TypeError(a.callback)},error:function(b,c){if(angular.isFunction(b)&&angular.isDefined(c))c.error(b);else if(angular.isFunction(b)&&angular.isUndefined(c))d.connection.hub.error(b);else if(!angular.isFunction(b))throw new TypeError(a.callback)}}}}]);